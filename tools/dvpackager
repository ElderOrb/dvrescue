#!/bin/bash

# dependencies: dvrescue, xmlstarlet

_usage(){
  echo "$(basename "${0}")"
  echo
  echo "Rewrap a DV stream. This script is part of the dvrescue project."
  echo
  echo "Usage:"
  echo "$(basename "${0}") [options] -i file.dv"
  echo
  echo "Options:"
  echo " -i INPUT (provide an input file to rewrap)"
  exit
}

_maketemp(){
    mktemp -q "/tmp/$(basename "${0}").XXXXXX"
    if [ "${?}" -ne 0 ]; then
        echo "${0}: Can't create temp file, exiting..."
        _writeerrorlog "_maketemp" "was unable to create the temp file, so the script had to exit."
        exit 1
    fi
}
# command-line options to set media id and original variables
OPTIND=1
while getopts ":i:h" opt ; do
  case "${opt}" in
    i) DV_FILE="$OPTARG" ;;
    h) _usage ;;
    *) echo "bad option -${OPTARG}" ; _usage ;;
    :) echo "Option -${OPTARG} requires an argument" ; exit 1 ;;
  esac
done
shift "$((OPTIND-1))"

if [[ ! -f "$DV_FILE" ]] ; then
  if [[ -f "${1}" ]] ; then
    DV_FILE="${1}"
  else
    echo "Please provide an input file to rewrap."
    exit 1
  fi
fi

_get_ranges(){
  xmlstarlet select -N "d=https://mediaarea.net/dvrescue" -t -m "d:dvrescue/d:media/d:frames" -v "@pts" -o "-" -v "@end_pts" -o "-" -v "d:frame[1]/@tc" -n "${DVRESCUE_XML}"
}

_convert_hhmmssmmm2s(){
  TS="${1}"
  H="$(echo "${TS}" | cut -d ":" -f1)"
  M="$(echo "${TS}" | cut -d ":" -f2)"
  S="$(echo "${TS}" | cut -d ":" -f3)"
  awk "BEGIN {print $H * 60 * 60 + $M * 60 + $S}"
}

_duration_from_pts_range(){
  START="${1}"
  END="${2}"
  START_SEC="$(_convert_hhmmssmmm2s "${START}")"
  END_SEC="$(_convert_hhmmssmmm2s "${END}")"
  awk "BEGIN {print $END_SEC - $START_SEC}"
}

# later give some options
FORMAT="mov"
EXTENSION="mov"

DVFILE="${1}"
BASENAME="$(basename "${DVFILE}")"
SIDECAR_DIR="${DVFILE}_dvrescue"
DVRESCUE_XML_TEMP="$(_maketemp)"
DVRESCUE_XML="${SIDECAR_DIR}/${BASENAME}.dvrescue.xml"

# check if the dvrescue xml is already made
if [[ ! -f "${DVRESCUE_XML}" ]] ; then
  echo "Making a dvrescue xml file for ${BASENAME}..."
  dvrescue "${DVFILE}" > "${DVRESCUE_XML_TEMP}"
  xmlstarlet sel -N "d=https://mediaarea.net/dvrescue" -t -m "/d:dvrescue/d:media" -v "@ref" -n "${DVRESCUE_XML_TEMP}"
  if [[ -z "$(xmlstarlet sel -N "d=https://mediaarea.net/dvrescue" -t -m "/d:dvrescue/d:media" -v "@ref" -n "${DVRESCUE_XML_TEMP}")" ]] ; then
    echo "This first video codec of ${BASENAME} is not DV."
    exit 1
  else
    # check if the sidecar directory is there
    if [[ ! -d "${SIDECAR_DIR}" ]] ; then
      mkdir -p "${SIDECAR_DIR}"
    fi
    mv -v "${DVRESCUE_XML_TEMP}" "${DVRESCUE_XML}"
  fi
fi

_get_ranges "${DVRESCUE_XML}"

OPT_INPUT+=(-y)
OPT_INPUT+=(-nostdin)
OPT_INPUT+=(-hide_banner)
OPT_OUTPUT+=(-map 0)
OPT_OUTPUT+=(-c:v copy)
OPT_OUTPUT+=(-c:a copy)
OPT_OUTPUT+=(-f "$FORMAT")

#DVRESCUE_VERSION="$(xmlstarlet sel -N "d=https://mediaarea.net/dvrescue" -t -v "d:dvrescue/d:creator/d:program" -o "-" -v "d:dvrescue/d:creator/d:version" -n "${DVRESCUE_XML}")"
#MUXER="${LAVF_VERSION} + ${DVRESCUE_VERSION}"

_get_ranges "${DVRESCUE_XML}" | while read range ; do
  unset START_TIME END_TIME METADATA
  PTS_START="$(echo "${range}" | cut -d"-" -f1)"
  PTS_START_FILENAME_SAFE="$(echo "${PTS_START}" | sed 's|:|-|g')"
  PTS_END="$(echo "${range}" | cut -d"-" -f2)"
  TC="$(echo "${range}" | cut -d"-" -f3)"
  TC_FILENAME_SAFE="$(echo "${TC}" | sed 's|:|-|g')"

  START_TIME+=(-ss "${PTS_START}")
  METADATA+=(-metadata "timecode=${TC}")
  #OPT_OUTPUT+=(-metadata "encoder=${MUXER}")
  OUTPUT_FILE="${SIDECAR_DIR}/${BASENAME}_${TC_FILENAME_SAFE}.${EXTENSION}"

  if [[ -n "${PTS_END}" ]] ; then
    DURATION="$(_duration_from_pts_range "${PTS_START}" "${PTS_END}")"
    echo "DURATION IS $DURATION"
    END_TIME+=(-t "${DURATION}")
  fi
  ffmpeg "${OPT_INPUT[@]}" "${START_TIME[@]}" -i "${DVFILE}" -c:v copy -f rawvideo - | ffmpeg "${OPT_INPUT[@]}" -i - "${OPT_OUTPUT[@]}" "${METADATA[@]}" "${END_TIME[@]}" "${OUTPUT_FILE}"
done
